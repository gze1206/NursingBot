using Discord;
using Discord.Commands;
using Discord.WebSocket;
using NursingBot.Features.Preconditions;

namespace NursingBot.Features
{
    [Group("party")]
    [RequireRegister]
    public class PartyModule : ModuleBase<SocketCommandContext>
    {
        private static readonly string STR_OK = "üá¥";
        private static readonly string STR_NO = "üáΩ";
        private static readonly string STR_CLOSE = "üö´";
        private static readonly Emoji EMOJI_OK = Emoji.Parse(STR_OK);
        private static readonly Emoji EMOJI_NO = Emoji.Parse(STR_NO);
        private static readonly Emoji EMOJI_CLOSE = Emoji.Parse(STR_CLOSE);

        [Command("register")]
        [Summary("ÌååÌã∞ Î™®Ïßë Í≥µÍ≥†Î•º Îì±Î°ùÌï† Ï±ÑÎÑê ÏÑ§Ï†ï")]
        [RequireUserPermission(GuildPermission.Administrator)]
        public async Task RegisterAsync([Summary("ÌååÌã∞ Î™®Ïßë Í≥µÍ≥†Í∞Ä Ïò¨ÎùºÍ∞à Ï±ÑÎÑêÏûÖÎãàÎã§. #Ï±ÑÎÑêÏù¥Î¶Ñ ÌòïÏãùÏúºÎ°ú ÏûÖÎ†•ÌïòÏãúÎ©¥ Îê©ÎãàÎã§.")] ITextChannel channel)
        {
            await this.ReplyAsync(channel.Name);
        }

        [Command("add")]
        [Summary("ÌååÌã∞ Î™®Ïßë Í≥µÍ≥† Îì±Î°ù")]
        public async Task AddAsync([Remainder][Summary("ÏÑ§Î™ÖÍ≥º ÏòàÏ†ï ÏùºÏãúÎ•º {ÏÑ§Î™Ö};{ÏòàÏ†ï ÏùºÏãú} ÌòïÌÉúÎ°ú Ï†ÅÏñ¥Ï£ºÏãúÎ©¥ Îê©ÎãàÎã§.")] string args)
        {
            if (this.Context.Channel is SocketTextChannel channel)
            {
                var tokens = args.Split(';');
                if (tokens.Length != 2)
                {
                    await this.ReplyAsync("ÌòïÏãùÏù¥ Ïò¨Î∞îÎ•¥ÏßÄ ÏïäÏäµÎãàÎã§.");
                    return;
                }

                var (description, date) = (tokens[0], tokens[1]);

                var msg = await channel.SendMessageAsync(embed: Build(this.Context.User, description, date, new[] { this.Context.User }));
                await msg.AddReactionsAsync(new[]
                {
                    EMOJI_OK, EMOJI_NO, EMOJI_CLOSE
                });

                await channel.CreateThreadAsync("ÌååÌã∞ Ïä§Î†àÎìú", message: msg);
            }
        }

        private static Embed Build(SocketUser sender, string description, string date, SocketUser[] users)
        {
            return new EmbedBuilder()
                .WithTitle("ÌååÌã∞ Î™®Ïßë")
                .WithDescription($"{sender.Mention} ÎãòÏù¥ Îì±Î°ùÌïú Î™®Ïßë Í≥µÍ≥†ÏûÖÎãàÎã§.")
                .AddField("ÏÑ§Î™Ö", description)
                .AddField("ÏòàÏ†ï ÏùºÏãú", date)
                .AddField("Ï∞∏Í∞ÄÏûê Î™©Î°ù", string.Join(", ", users.Select(u => u.Username)))
                .AddField("Ï∞∏Í∞Ä Ïó¨Î∂Ä", $"{STR_OK} : Ï∞∏Í∞Ä\n{STR_NO} : Î∂àÏ∞∏\n{STR_CLOSE} : ÎßàÍ∞ê")
                .Build();
        }
    }
}